#!/bin/bash

# Waylio Phase 1 - Complete Appointment Flow Test
# This script demonstrates the end-to-end appointment booking and queue management flow

BASE_URL="http://localhost:3001/api/v1"

echo "üß™ WAYLIO PHASE 1 - APPOINTMENT FLOW TEST"
echo "=========================================="
echo ""

# Step 1: Patient Login
echo "üìù Step 1: Patient Login"
echo "------------------------"
LOGIN_RESPONSE=$(curl -s -X POST $BASE_URL/auth/login \
  -H "Content-Type: application/json" \
  -d '{
    "email": "patient1@example.com",
    "password": "patient123"
  }')

PATIENT_TOKEN=$(echo $LOGIN_RESPONSE | jq -r '.accessToken')
PATIENT_ID=$(echo $LOGIN_RESPONSE | jq -r '.user.id')

echo "‚úÖ Patient logged in successfully"
echo "Patient ID: $PATIENT_ID"
echo ""

# Step 2: Search for Doctors
echo "üîç Step 2: Search for Cardiology Doctors"
echo "----------------------------------------"
DOCTORS=$(curl -s "$BASE_URL/doctors/search?department=Cardiology")
DOCTOR_ID=$(echo $DOCTORS | jq -r '.[0].id')
DOCTOR_NAME=$(echo $DOCTORS | jq -r '.[0].firstName + " " + .[0].lastName')

echo "‚úÖ Found doctor: Dr. $DOCTOR_NAME"
echo "Doctor ID: $DOCTOR_ID"
echo ""

# Step 3: Create Appointment
echo "üìÖ Step 3: Create Appointment"
echo "-----------------------------"
TOMORROW=$(date -v+1d +%Y-%m-%d)
APPOINTMENT_TIME="${TOMORROW}T10:00:00Z"

APPOINTMENT=$(curl -s -X POST $BASE_URL/appointments \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $PATIENT_TOKEN" \
  -d "{
    \"patientId\": \"$PATIENT_ID\",
    \"doctorId\": \"$DOCTOR_ID\",
    \"scheduledTime\": \"$APPOINTMENT_TIME\",
    \"notes\": \"Regular checkup - automated test\"
  }")

APPOINTMENT_ID=$(echo $APPOINTMENT | jq -r '.id')
APPOINTMENT_STATUS=$(echo $APPOINTMENT | jq -r '.status')

echo "‚úÖ Appointment created successfully"
echo "Appointment ID: $APPOINTMENT_ID"
echo "Status: $APPOINTMENT_STATUS"
echo "Scheduled Time: $APPOINTMENT_TIME"
echo ""

# Step 4: Check-in to Appointment
echo "‚úÖ Step 4: Patient Check-in"
echo "---------------------------"
CHECKIN=$(curl -s -X POST $BASE_URL/appointments/check-in \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $PATIENT_TOKEN" \
  -d "{
    \"appointmentId\": \"$APPOINTMENT_ID\"
  }")

CHECKIN_STATUS=$(echo $CHECKIN | jq -r '.status')
QUEUE_POSITION=$(echo $CHECKIN | jq -r '.queuePosition')

echo "‚úÖ Patient checked in successfully"
echo "Status: $CHECKIN_STATUS"
echo "Queue Position: $QUEUE_POSITION"
echo ""

# Step 5: Doctor Login
echo "üë®‚Äç‚öïÔ∏è Step 5: Doctor Login"
echo "------------------------"
DOCTOR_LOGIN=$(curl -s -X POST $BASE_URL/auth/login \
  -H "Content-Type: application/json" \
  -d '{
    "email": "dr.smith@waylio.com",
    "password": "doctor123"
  }')

DOCTOR_TOKEN=$(echo $DOCTOR_LOGIN | jq -r '.accessToken')

echo "‚úÖ Doctor logged in successfully"
echo ""

# Step 6: View Doctor's Queue
echo "üìã Step 6: View Doctor's Queue"
echo "-------------------------------"
QUEUE=$(curl -s "$BASE_URL/appointments/doctor-queue?doctorId=$DOCTOR_ID&date=$TOMORROW" \
  -H "Authorization: Bearer $DOCTOR_TOKEN")

QUEUE_LENGTH=$(echo $QUEUE | jq '. | length')

echo "‚úÖ Doctor's queue retrieved"
echo "Queue Length: $QUEUE_LENGTH patient(s)"
echo ""
echo "Queue Details:"
echo $QUEUE | jq '.[] | {position: .queuePosition, patient: .patient.firstName + " " + .patient.lastName, status: .status, estimatedWait: .estimatedWaitTime}'
echo ""

# Step 7: Doctor Starts Consultation
echo "ü©∫ Step 7: Doctor Starts Consultation"
echo "-------------------------------------"
START_CONSULT=$(curl -s -X PATCH "$BASE_URL/appointments/$APPOINTMENT_ID" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $DOCTOR_TOKEN" \
  -d '{
    "status": "IN_PROGRESS"
  }')

CONSULT_STATUS=$(echo $START_CONSULT | jq -r '.status')

echo "‚úÖ Consultation started"
echo "Status: $CONSULT_STATUS"
echo ""

# Step 8: Doctor Completes Consultation
echo "‚úÖ Step 8: Doctor Completes Consultation"
echo "----------------------------------------"
COMPLETE=$(curl -s -X PATCH "$BASE_URL/appointments/$APPOINTMENT_ID" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $DOCTOR_TOKEN" \
  -d '{
    "status": "COMPLETED"
  }')

FINAL_STATUS=$(echo $COMPLETE | jq -r '.status')

echo "‚úÖ Consultation completed"
echo "Status: $FINAL_STATUS"
echo ""

# Step 9: View Patient's Appointments
echo "üì± Step 9: View Patient's Appointments"
echo "--------------------------------------"
MY_APPOINTMENTS=$(curl -s "$BASE_URL/appointments/my-appointments" \
  -H "Authorization: Bearer $PATIENT_TOKEN")

echo "‚úÖ Patient's appointments retrieved"
echo ""
echo $MY_APPOINTMENTS | jq '.[] | {id: .id, doctor: .doctor.firstName + " " + .doctor.lastName, status: .status, scheduledTime: .scheduledTime}'
echo ""

# Summary
echo "üéâ APPOINTMENT FLOW TEST COMPLETE!"
echo "=================================="
echo ""
echo "Summary:"
echo "--------"
echo "‚úÖ Patient logged in"
echo "‚úÖ Searched for doctors"
echo "‚úÖ Created appointment"
echo "‚úÖ Checked in to appointment"
echo "‚úÖ Doctor logged in"
echo "‚úÖ Doctor viewed queue"
echo "‚úÖ Doctor started consultation"
echo "‚úÖ Doctor completed consultation"
echo "‚úÖ Patient viewed appointment history"
echo ""
echo "üöÄ All Phase 1 backend features are working correctly!"
echo ""
echo "Next Steps:"
echo "----------"
echo "1. Build frontend patient portal for booking"
echo "2. Build frontend doctor dashboard for queue management"
echo "3. Build frontend reception dashboard"
echo "4. Integrate WebSocket for real-time updates"
echo ""

